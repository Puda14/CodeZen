version: '3.8'

services:
  nginx:
    build: ./ngix
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - user-service
      - code-manager-service
      - chatbot-service
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_HEARTBEAT: 3600 
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

  user-service:
    build: ./services/user
    ports:
      - "8001:8001"
    networks:
      - app-network

  code-manager-service:
    build: ./services/code_manager
    volumes:
      - ./services/code_manager:/app
    ports:
      - "8002:8002"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/

  code-execute-worker-service:
    build: ./services/code_execute_worker
    volumes:
      - ./services/code_execute_worker:/app
      - /tmp/code_manager:/tmp/code_manager:rw
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8012:8012"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/

  chatbot-service:
    build: ./services/chatbot
    ports:
      - "8003:8003"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
